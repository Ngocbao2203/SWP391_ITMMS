import React, { useState, useEffect } from "react";
import { Button, Card, Carousel, Row, Col, Typography, Spin, message } from "antd";
import { Link } from "react-router-dom";
import MainLayout from "../../layouts/MainLayout";
import "../../styles/Home.css";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { guestService, formatErrorMessage } from "../../services";

const { Title, Paragraph } = Typography;

// Fallback testimonials n·∫øu kh√¥ng c√≥ data t·ª´ API
const testimonials = [
  {
    title: "L∆Ø∆†NG Y NH∆Ø T·ª™ M·∫™U",
    content: `T√¢m s√°ng, th√¥ng ph∆∞∆°ng, t√†i d∆∞·ª£c\nƒêi·ªÅu tr·ªã b·ªánh nh∆∞ c√≥ ph√©p ti√™n\nNh∆∞ tu√¥n n∆∞·ªõc n√≥ng tan li·ªÅn tuy·∫øt bƒÉng\nH·ªèi bao l·∫ßn ch√≤ng m·∫Øt qu·∫ßng ƒëen\nPh·∫£i kh√¥ng nh·ªØng ƒë√™m d√†i th·ª©c tr·∫Øng`,
    author: "L∆∞∆°ng y nh∆∞ t·ª´ m·∫´u",
  },
  {
    title: "L·ªúI C·∫¢M ∆†N",
    content: `M∆∞·ªùi ng√†y ƒëi·ªÅu tr·ªã t·∫°i khoa (khoa ngo·∫°i)\nRa v·ªÅ ch·ªâ c√≥ m√≥n qu√† b·∫±ng th∆°\nTh·ªùi gian ƒë·∫øm ng∆∞·ª£c t·ª´ng gi·ªù\nMong cho b·ªánh kh·ªèi ƒë·ªÉ c√≤n v·ªÅ qu√™`,
    author: "L·ªùi c·∫£m ∆°n M∆∞·ªùi ng√†y ƒëi·ªÅu tr·ªã t·∫°i khoa (khoa ngo·∫°i)",
  },
];

const Home = () => {
  const [homeData, setHomeData] = useState(null);
  const [doctors, setDoctors] = useState([]);
  const [services, setServices] = useState([]);
  const [blogs, setBlogs] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchHomeData = async () => {
      try {
        setLoading(true);
        
        // L·∫•y t·∫•t c·∫£ data c·∫ßn thi·∫øt cho trang ch·ªß
        const [
          homePageInfo,
          publicDoctors,
          featuredServices,
          recentBlogs
        ] = await Promise.all([
          guestService.getHomePageInfo(),
          guestService.getTopRatedDoctors(4),
          guestService.getPopularServices(6),
          guestService.getRecentBlogPosts(3)
        ]);

        setHomeData(homePageInfo);
        setDoctors(publicDoctors.doctors || []);
        setServices(featuredServices.services || []);
        setBlogs(recentBlogs.posts || []);

      } catch (error) {
        console.error('Error fetching home data:', error);
        message.error(formatErrorMessage(error));
        
        // Fallback ƒë·ªÉ trang v·∫´n hi·ªÉn th·ªã ƒë∆∞·ª£c n·∫øu API l·ªói
        setHomeData({
          clinicInfo: {
            name: "ITMMS Fertility Clinic",
            description: "Chuy√™n khoa ƒëi·ªÅu tr·ªã hi·∫øm mu·ªôn",
          },
          stats: {
            totalDoctors: 5,
            totalPatients: 150,
            successRate: 85.5
          }
        });
      } finally {
        setLoading(false);
      }
    };

    fetchHomeData();

    // Save current path to sessionStorage when on the home page
    sessionStorage.setItem('previousPath', window.location.pathname);
  }, []);

  if (loading) {
    return (
      <MainLayout>
        <div style={{ textAlign: 'center', padding: '100px 0' }}>
          <Spin size="large" />
          <p style={{ marginTop: 16 }}>ƒêang t·∫£i d·ªØ li·ªáu...</p>
        </div>
      </MainLayout>
    );
  }

  return (
    <MainLayout>
      <div className="home-page">
        {/* Banner */}
        <div
          className="banner-section"
          style={{
            backgroundImage:
              "url(https://res.cloudinary.com/dqnq00784/image/upload/v1746013282/udf9sd7mne0dalsnyjrq.png)",
          }}
        >
          <div className="banner-content">
            <Title level={2} className="banner-title">
              {homeData?.clinicInfo?.name || "ITMMS"} ‚Äì Chuy√™n s√¢u & T·∫≠n t√¢m
            </Title>
            <Paragraph className="home-subtext">
              {homeData?.clinicInfo?.description || 
               "ITMMS l√† ƒë·ªãa ch·ªâ tin c·∫≠y trong lƒ©nh v·ª±c ƒëi·ªÅu tr·ªã v√¥ sinh ‚Äì hi·∫øm mu·ªôn t·∫°i Vi·ªát Nam, n∆°i b·∫°n ƒë∆∞·ª£c ƒë·ªìng h√†nh v√† chƒÉm s√≥c to√†n di·ªán tr√™n h√†nh tr√¨nh t√¨m ki·∫øm con y√™u."}
            </Paragraph>
            
            {/* Hi·ªÉn th·ªã th·ªëng k√™ n·∫øu c√≥ */}
            {homeData?.stats && (
              <div className="clinic-stats">
                <Row gutter={16} justify="center">
                  <Col>
                    <div className="stat-item">
                      <div className="stat-number">{homeData.stats.totalDoctors}+</div>
                      <div className="stat-label">B√°c sƒ© chuy√™n khoa</div>
                    </div>
                  </Col>
                  <Col>
                    <div className="stat-item">
                      <div className="stat-number">{homeData.stats.totalPatients}+</div>
                      <div className="stat-label">B·ªánh nh√¢n tin t∆∞·ªüng</div>
                    </div>
                  </Col>
                  <Col>
                    <div className="stat-item">
                      <div className="stat-number">{homeData.stats.successRate}%</div>
                      <div className="stat-label">T·ª∑ l·ªá th√†nh c√¥ng</div>
                    </div>
                  </Col>
                </Row>
              </div>
            )}
          </div>
        </div>

        {/* L√Ω do n√™n ch·ªçn My Clinic */}
        <div className="section why-my-clinic">
          <Row gutter={[32, 32]} align="middle">
            <Col xs={24} md={10}>
              <img
                src="https://res.cloudinary.com/dqnq00784/image/upload/v1746013282/udf9sd7mne0dalsnyjrq.png"
                alt="Nh√¢n vi√™n y t·∫ø"
                className="clinic-hero-image"
              />
            </Col>
            <Col xs={24} md={14}>
              <Title level={3}>T·∫°i sao n√™n ch·ªçn {homeData?.clinicInfo?.name || 'My Clinic'}?</Title>
              <Row gutter={[16, 24]}>
                <Col xs={24} sm={12}>
                  <div className="clinic-box">
                    <div className="clinic-icon">üë©‚Äç‚öïÔ∏è</div>
                    <Title level={5}>Chuy√™n gia hi·∫øm mu·ªôn</Title>
                    <Paragraph>
                      Quy t·ª• ƒë·ªôi ng≈© b√°c sƒ© v√† ƒëi·ªÅu d∆∞·ª°ng c√≥ chuy√™n m√¥n s√¢u trong lƒ©nh v·ª±c IVF, IUI, n·ªôi ti·∫øt sinh s·∫£n.
                    </Paragraph>
                  </div>
                </Col>
                <Col xs={24} sm={12}>
                  <div className="clinic-box">
                    <div className="clinic-icon">üåç</div>
                    <Title level={5}>Ti√™u chu·∫©n qu·ªëc t·∫ø</Title>
                    <Paragraph>
                      Quy tr√¨nh ƒëi·ªÅu tr·ªã v√† chƒÉm s√≥c ƒë∆∞·ª£c ki·ªÉm so√°t nghi√™m ng·∫∑t theo c√°c ti√™u chu·∫©n qu·ªëc t·∫ø v·ªÅ h·ªó tr·ª£ sinh s·∫£n.
                    </Paragraph>
                  </div>
                </Col>
                <Col xs={24} sm={12}>
                  <div className="clinic-box">
                    <div className="clinic-icon">üî¨</div>
                    <Title level={5}>C√¥ng ngh·ªá hi·ªán ƒë·∫°i</Title>
                    <Paragraph>
                      ·ª®ng d·ª•ng c√¥ng ngh·ªá x√©t nghi·ªám v√† th·ª• tinh ti√™n ti·∫øn nh·∫±m tƒÉng t·ªâ l·ªá th√†nh c√¥ng cho t·ª´ng ca ƒëi·ªÅu tr·ªã.
                    </Paragraph>
                  </div>
                </Col>
                <Col xs={24} sm={12}>
                  <div className="clinic-box">
                    <div className="clinic-icon">üí°</div>
                    <Title level={5}>Nghi√™n c·ª©u & c√° th·ªÉ h√≥a</Title>
                    <Paragraph>
                      √Åp d·ª•ng nghi√™n c·ª©u m·ªõi v√† x√¢y d·ª±ng ph√°c ƒë·ªì c√° nh√¢n h√≥a gi√∫p t·ªëi ∆∞u hi·ªáu qu·∫£ ƒëi·ªÅu tr·ªã cho t·ª´ng b·ªánh nh√¢n.
                    </Paragraph>
                  </div>
                </Col>
              </Row>
            </Col>
          </Row>
        </div>

        {/* Featured Services */}
        {services.length > 0 && (
          <div className="section services-section">
            <Title level={3} style={{ textAlign: "center" }}>D·ªäCH V·ª§ N·ªîI B·∫¨T</Title>
            <Row gutter={[24, 24]}>
              {services.slice(0, 3).map((service) => (
                <Col xs={24} sm={12} md={8} key={service.id}>
                  <Card
                    title={service.serviceName}
                    bordered
                    hoverable
                    className="service-card"
                  >
                    <Paragraph ellipsis={{ rows: 2 }}>
                      {service.description}
                    </Paragraph>
                    <div className="service-info">
                      <p><strong>Th·ªùi gian:</strong> {service.durationDays} ng√†y</p>
                      <p><strong>T·ª∑ l·ªá th√†nh c√¥ng:</strong> {service.successRate}%</p>
                    </div>
                    <Link to={`/services/${service.id}`}>
                      <Button type="primary" block>
                        T√¨m hi·ªÉu th√™m
                      </Button>
                    </Link>
                  </Card>
                </Col>
              ))}
            </Row>
            <div style={{ textAlign: 'center', marginTop: 24 }}>
              <Link to="/userservice">
                <Button type="link" size="large">
                  Xem t·∫•t c·∫£ d·ªãch v·ª•
                </Button>
              </Link>
            </div>
          </div>
        )}

        {/* Doctors Section */}
        {doctors.length > 0 && (
          <div className="section doctors-section">
            <Title level={3} style={{ textAlign: "center" }}>ƒê·ªòI NG≈® CHUY√äN GIA</Title>
            <Carousel 
              dots={false} 
              arrows 
              infinite 
              slidesToShow={Math.min(doctors.length, 4)} 
              responsive={[
                {
                  breakpoint: 1024,
                  settings: {
                    slidesToShow: Math.min(doctors.length, 2),
                  },
                },
                {
                  breakpoint: 768,
                  settings: {
                    slidesToShow: 1,
                  },
                },
              ]}
            >
              {doctors.map((doctor) => (
                <div className="doctor-profile" key={doctor.id}>
                  <img 
                    src={doctor.profileImage || "https://res.cloudinary.com/dqnq00784/image/upload/v1746013282/udf9sd7mne0dalsnyjrq.png"} 
                    alt={doctor.name} 
                    className="doctor-img" 
                  />
                  <div className="doctor-info">
                    <div className="doctor-name">{doctor.name}</div>
                    <div className="doctor-title">{doctor.specialization}</div>
                    <div className="doctor-rating">
                      ‚≠ê {doctor.averageRating?.toFixed(1) || 'N/A'} ({doctor.experienceYears} nƒÉm kinh nghi·ªám)
                    </div>
                  </div>
                </div>
              ))}
            </Carousel>
            <div style={{ textAlign: 'center', marginTop: 24 }}>
              <Link to="/doctors">
                <Button type="link" size="large">
                  Xem t·∫•t c·∫£ b√°c sƒ©
                </Button>
              </Link>
            </div>
          </div>
        )}

        {/* Testimonials */}
        <Slider
          arrows
          dots={false}
          infinite
          slidesToShow={2}
          slidesToScroll={1}
          responsive={[
            {
              breakpoint: 1024,
              settings: {
                slidesToShow: 1,
              },
            },
          ]}
          className="gratitude-carousel"
        >
          {testimonials.map((t, index) => (
            <div key={index} className="gratitude-slide">
              <Row gutter={[32, 0]} justify="center" align="middle">
                <Col xs={24} md={12} className="gratitude-block">
                  <div className="quote-mark">"</div>
                  <Paragraph className="gratitude-text">{t.content}</Paragraph>
                  <Link to="#" className="gratitude-detail">Chi ti·∫øt...</Link>
                  <div className="gratitude-author">
                    <strong>{t.title}</strong>
                    <div>{t.author}</div>
                  </div>
                </Col>
              </Row>
            </div>
          ))}
        </Slider>

        {/* Blog Posts */}
        {blogs.length > 0 && (
          <div className="section articles-section">
            <Title level={3}>Chia s·∫ª kinh nghi·ªám</Title>
            <Row gutter={[24, 24]}>
              {blogs.map((blog) => (
                <Col xs={24} sm={12} md={8} key={blog.id}>
                  <Card
                    title={blog.title}
                    bordered
                    hoverable
                    cover={
                      <img 
                        alt={blog.title} 
                        src={blog.coverImage || blog.image || "https://via.placeholder.com/300x200"} 
                        style={{ height: 200, objectFit: 'cover' }}
                      />
                    }
                  >
                    <Paragraph ellipsis={{ rows: 2 }}>
                      {blog.summary || blog.excerpt || blog.content}
                    </Paragraph>
                    <Link to={`/blog/${blog.id}?from=home`}>
                      <Button type="link">ƒê·ªçc th√™m</Button>
                    </Link>
                  </Card>
                </Col>
              ))}
            </Row>
            <div style={{ textAlign: 'center', marginTop: 24 }}>
              <Link to="/blog">
                <Button type="link" size="large">
                  Xem th√™m b√†i vi·∫øt
                </Button>
              </Link>
            </div>
          </div>
        )}
      </div>
    </MainLayout>
  );
};

export default Home;
